<Version>1.0.1</Version>

<ProgrammingBlock type="comment" commented="1">2616 Team___. Programmer: Emperor Edward the Great. Last edited 2017/1/12</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="enableCompetitionMode"/>

<ProgrammingBlock type="loop" loopType="RepeatForever"/>

<ProgrammingBlock type="comment">To be decided...</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="IfOnly">
    <Parameters>
        <Parameter name="LHS" type="typedef">getCompetitionAutonomous()</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="float">true</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnLeft">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnLeft">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="backward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnRight">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="forward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="turnRight">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="backward">
    <Parameters>
        <Parameter name="quantity" type="float" default="1">1</Parameter>
        <Parameter name="unitType" type="base typedef" default="rotations" typeDef="tMovementUnits">rotations</Parameter>
        <Parameter name="speed" type="short" default="50">50</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="comment">Need the port numbers</ProgrammingBlock>

<ProgrammingBlock type="loop" loopType="IfOnly">
    <Parameters>
        <Parameter name="LHS" type="typedef">getCompetitionDriverControl()</Parameter>
        <Parameter name="operator" type="typedef">==</Parameter>
        <Parameter name="RHS" type="float">true</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="joystickControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="port10" typeDef="tMotor">port1</Parameter>
        <Parameter name="motorJoystick" type="base typedef" default="Ch2" typeDef="TVexJoysticks">Ch2</Parameter>
        <Parameter name="threshold" type="short" default="10">10</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="joystickControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="port10" typeDef="tMotor">port2</Parameter>
        <Parameter name="motorJoystick" type="base typedef" default="Ch2" typeDef="TVexJoysticks">Ch2</Parameter>
        <Parameter name="threshold" type="short" default="10">10</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="buttonControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="port10" typeDef="tMotor">port3</Parameter>
        <Parameter name="upButton" type="base typedef" default="Btn5U" typeDef="TVexJoysticks">Btn5U</Parameter>
        <Parameter name="downButton" type="base typedef" default="Btn5D" typeDef="TVexJoysticks">Btn5D</Parameter>
        <Parameter name="armSpeed" type="short" default="75">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="buttonControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="port10" typeDef="tMotor">port4</Parameter>
        <Parameter name="upButton" type="base typedef" default="Btn5U" typeDef="TVexJoysticks">Btn5U</Parameter>
        <Parameter name="downButton" type="base typedef" default="Btn5D" typeDef="TVexJoysticks">Btn5D</Parameter>
        <Parameter name="armSpeed" type="short" default="75">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="buttonControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="port10" typeDef="tMotor">port5</Parameter>
        <Parameter name="upButton" type="base typedef" default="Btn5U" typeDef="TVexJoysticks">Btn5U</Parameter>
        <Parameter name="downButton" type="base typedef" default="Btn5D" typeDef="TVexJoysticks">Btn5D</Parameter>
        <Parameter name="armSpeed" type="short" default="75">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="functionCall" function="buttonControl">
    <Parameters>
        <Parameter name="armMotorPort" type="base typedef" default="port10" typeDef="tMotor">port6</Parameter>
        <Parameter name="upButton" type="base typedef" default="Btn5U" typeDef="TVexJoysticks">Btn5U</Parameter>
        <Parameter name="downButton" type="base typedef" default="Btn5D" typeDef="TVexJoysticks">Btn5D</Parameter>
        <Parameter name="armSpeed" type="short" default="75">75</Parameter>
    </Parameters>
</ProgrammingBlock>

<ProgrammingBlock type="end"/>

<ProgrammingBlock type="end"/>

<RobotConfiguration>#pragma config(Motor,  port1,            ,             tmotorVex393_HBridge, openLoop)
#pragma config(Motor,  port2,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port3,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port4,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port6,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port7,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port8,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port9,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port10,           ,             tmotorVex393_HBridge, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
</RobotConfiguration>

<CSource>#pragma config(Motor,  port1,            ,             tmotorVex393_HBridge, openLoop)
#pragma config(Motor,  port2,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port3,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port4,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port5,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port6,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port7,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port8,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port9,            ,             tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port10,           ,             tmotorVex393_HBridge, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//


task main()
{
	//// 2616 Team___. Programmer: Emperor Edward the Great. Last edited 2017/1/12
	enableCompetitionMode();
	repeat (forever) {
		// To be decided...
		if (getCompetitionAutonomous() == true) {
			forward(1, rotations, 50);
			turnLeft(1, rotations, 50);
			forward(1, rotations, 50);
			turnLeft(1, rotations, 50);
			backward(1, rotations, 50);
			turnRight(1, rotations, 50);
			forward(1, rotations, 50);
			turnRight(1, rotations, 50);
			backward(1, rotations, 50);
		}
		// Need the port numbers
		if (getCompetitionDriverControl() == true) {
			joystickControl(port1, Ch2, 10);
			joystickControl(port2, Ch2, 10);
			buttonControl(port3, Btn5U, Btn5D, 75);
			buttonControl(port4, Btn5U, Btn5D, 75);
			buttonControl(port5, Btn5U, Btn5D, 75);
			buttonControl(port6, Btn5U, Btn5D, 75);
		}
	}
}
</CSource>
